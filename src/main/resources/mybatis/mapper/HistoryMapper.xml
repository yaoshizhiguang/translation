<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.springboot.translation.mapper.HistoryMapper">
  <resultMap id="BaseResultMap" type="com.demo.springboot.translation.common.domain.History">
    <id column="hid" jdbcType="INTEGER" property="hid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="huid" jdbcType="INTEGER" property="huid" />
    <result column="time" jdbcType="DATE" property="time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.demo.springboot.translation.common.domain.HistoryWithBLOBs">
    <result column="origintext" jdbcType="LONGVARCHAR" property="origintext" />
    <result column="resulttext" jdbcType="LONGVARCHAR" property="resulttext" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hid, uid, huid, time
  </sql>
  <sql id="Blob_Column_List">
    origintext, resulttext
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.demo.springboot.translation.common.domain.HistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.demo.springboot.translation.common.domain.HistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from history
    where hid = #{hid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from history
    where hid = #{hid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.springboot.translation.common.domain.HistoryExample">
    delete from history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.springboot.translation.common.domain.HistoryWithBLOBs">
    insert into history (hid, uid, huid, 
      time, origintext, resulttext
      )
    values (#{hid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{huid,jdbcType=INTEGER}, 
      #{time,jdbcType=DATE}, #{origintext,jdbcType=LONGVARCHAR}, #{resulttext,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.springboot.translation.common.domain.HistoryWithBLOBs">
    insert into history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hid != null">
        hid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="huid != null">
        huid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="origintext != null">
        origintext,
      </if>
      <if test="resulttext != null">
        resulttext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hid != null">
        #{hid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="huid != null">
        #{huid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="origintext != null">
        #{origintext,jdbcType=LONGVARCHAR},
      </if>
      <if test="resulttext != null">
        #{resulttext,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.springboot.translation.common.domain.HistoryExample" resultType="java.lang.Long">
    select count(*) from history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update history
    <set>
      <if test="record.hid != null">
        hid = #{record.hid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.huid != null">
        huid = #{record.huid,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.origintext != null">
        origintext = #{record.origintext,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.resulttext != null">
        resulttext = #{record.resulttext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update history
    set hid = #{record.hid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      huid = #{record.huid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      origintext = #{record.origintext,jdbcType=LONGVARCHAR},
      resulttext = #{record.resulttext,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update history
    set hid = #{record.hid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      huid = #{record.huid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.springboot.translation.common.domain.HistoryWithBLOBs">
    update history
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="huid != null">
        huid = #{huid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="origintext != null">
        origintext = #{origintext,jdbcType=LONGVARCHAR},
      </if>
      <if test="resulttext != null">
        resulttext = #{resulttext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where hid = #{hid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.demo.springboot.translation.common.domain.HistoryWithBLOBs">
    update history
    set uid = #{uid,jdbcType=INTEGER},
      huid = #{huid,jdbcType=INTEGER},
      time = #{time,jdbcType=DATE},
      origintext = #{origintext,jdbcType=LONGVARCHAR},
      resulttext = #{resulttext,jdbcType=LONGVARCHAR}
    where hid = #{hid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.springboot.translation.common.domain.History">
    update history
    set uid = #{uid,jdbcType=INTEGER},
      huid = #{huid,jdbcType=INTEGER},
      time = #{time,jdbcType=DATE}
    where hid = #{hid,jdbcType=INTEGER}
  </update>
</mapper>